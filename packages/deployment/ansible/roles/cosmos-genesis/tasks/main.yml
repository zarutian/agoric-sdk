- name: "Check faucet exists"
  become: yes
  become_user: "{{ service }}"
  shell: "ag-cosmos-helper keys show --keyring-backend=test faucet"
  ignore_errors: true
  register: faucet_exists

- name: "Create faucet account for {{ service }}"
  become: yes
  become_user: "{{ service }}"
  shell: "ag-cosmos-helper keys add --keyring-backend=test faucet"
  when: faucet_exists.rc != 0

- name: "Check {{ STAKER }}-{{ STAKER_NODE }} exists"
  become: yes
  become_user: "{{ service }}"
  shell: "ag-cosmos-helper keys show --keyring-backend=test {{ STAKER }}-{{ STAKER_NODE }}"
  ignore_errors: true
  register: staker_exists

- name: "Create {{ STAKER_NODE }} account for {{ service }}"
  become: yes
  become_user: "{{ service }}"
  shell: "ag-cosmos-helper keys add --keyring-backend=test {{ STAKER }}-{{ STAKER_NODE }}"
  when: staker_exists.rc != 0

- name: "Remove transaction directories"
  become: yes
  become_user: "{{ service }}"
  file:
    state: absent
    path: "{{ item }}"
  with_items:
    - "/home/{{ service }}/.{{ service }}/config/gentx"
    - "/home/{{ service }}/validator-txes.txt"

- name: "Add bootstrap coins to {{ service }}"
  become: yes
  become_user: "{{ service }}"
  shell: "{{ service }} add-genesis-account {{ BOOTSTRAP_ADDRESS }} {{ BOOTSTRAP_TOKENS }}"
  ignore_errors: true

- name: "Add faucet coins to {{ service }}"
  become: yes
  become_user: "{{ service }}"
  shell: "\
    {{ service }} add-genesis-account \
      $(ag-cosmos-helper keys show --keyring-backend=test faucet -a) \
      {{ STAKER_TOKENS }}"
  ignore_errors: true

- name: "Add {{ STAKER_AMOUNT }} coins to {{ STAKER }}-{{ STAKER_NODE }}"
  become: yes
  become_user: "{{ service }}"
  shell: "{{ service }} add-genesis-account \
    $(ag-cosmos-helper keys show --keyring-backend=test {{ STAKER }}-{{ STAKER_NODE }} -a) \
    {{ STAKER_AMOUNT }}"
  ignore_errors: true

- set_fact:
    delegates: "{{ lookup('file', SETUP_HOME + '/cosmos-delegates.txt', errors='ignore') }}"

- name: "Transfer stake to delegates"
  become_user: "{{ service }}"
  become: true
  shell: "\
    {{ service }} add-genesis-account \
    {{ item | regex_replace('^([^:]*):([^:]*).*$', '\\1 \\2') }}"
  with_items:
    - "{{ delegates.splitlines() }}"
  when: delegates != ""

- name: "Create transaction directory"
  become: yes
  become_user: "{{ service }}"
  file:
    state: directory
    path: "{{ item }}"
    mode: 0700
  with_items:
    - "/home/{{ service }}/.{{ service }}/config/gentx"

- name: "Create first validator gentx"
  become: yes
  become_user: "{{ service }}"
  shell: "\
    {{ service }} gentx --keyring-backend=test --amount={{ STAKER_AMOUNT }} \
      {{ STAKER_IDENTITY_FLAGS }}
      --name={{ STAKER }}-{{ STAKER_NODE }} --output-document={{ json }}"
  vars:
    json: "/home/{{ service }}/.{{ service }}/config/gentx/{{ STAKER_NODE }}.json"
  args:
    creates: "{{ json }}"

- name: "Collect gentxs"
  become: yes
  become_user: "{{ service }}"
  shell: "{{ service }} collect-gentxs"

- name: "Validate genesis"
  become: yes
  become_user: "{{ service }}"
  shell: "{{ service }} validate-genesis"

- name: "Download main genesis.json"
  fetch:
    src: "/home/{{ service }}/.{{ service }}/config/genesis.json"
    flat: yes
    dest: "{{ data | default(service + '/data') }}/genesis.json"
